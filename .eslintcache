[{"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\index.js":"1","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\eventContext.js":"2","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\postContext.js":"3","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profilePage.jsx":"4","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\home.jsx":"5","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\fullPost.jsx":"6","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\eventPage.jsx":"7","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\LoginForm.js":"8","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\post.jsx":"9","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\createNewEvent.jsx":"10","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\editProfile.js":"11","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\technologies.js":"12","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userExpertise.jsx":"13","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\aboutUser.jsx":"14","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userFieldOfInterest.jsx":"15","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\message.jsx":"16","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\chat.jsx":"17","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profileContext.jsx":"18","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\SignUpForm.js":"19","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\navbar.jsx":"20","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\event.jsx":"21","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\programmingLanguages.js":"22","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\locationData.js":"23","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\reportWebVitals.js":"24","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\chatArea.jsx":"25","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\postComment.jsx":"26","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\search.jsx":"27","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\loginPage.jsx":"28","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userContext.jsx":"29","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profile.jsx":"30","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userExperience.jsx":"31","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\newPost.jsx":"32"},{"size":500,"mtime":1607045768000,"results":"33","hashOfConfig":"34"},{"size":1532,"mtime":1620822868000,"results":"35","hashOfConfig":"34"},{"size":2825,"mtime":1620822868000,"results":"36","hashOfConfig":"34"},{"size":339,"mtime":1609017622000,"results":"37","hashOfConfig":"34"},{"size":1740,"mtime":1620822868000,"results":"38","hashOfConfig":"34"},{"size":3117,"mtime":1610005208000,"results":"39","hashOfConfig":"34"},{"size":1871,"mtime":1620822868000,"results":"40","hashOfConfig":"34"},{"size":1327,"mtime":1609646064000,"results":"41","hashOfConfig":"34"},{"size":8127,"mtime":1620822868000,"results":"42","hashOfConfig":"34"},{"size":9144,"mtime":1620902830000,"results":"43","hashOfConfig":"34"},{"size":5579,"mtime":1609543178000,"results":"44","hashOfConfig":"34"},{"size":1262,"mtime":1620207188000,"results":"45","hashOfConfig":"34"},{"size":650,"mtime":1620899104000,"results":"46","hashOfConfig":"34"},{"size":660,"mtime":1620898552000,"results":"47","hashOfConfig":"34"},{"size":698,"mtime":1620902082000,"results":"48","hashOfConfig":"34"},{"size":664,"mtime":1620713884000,"results":"49","hashOfConfig":"34"},{"size":4613,"mtime":1620822868000,"results":"50","hashOfConfig":"34"},{"size":3685,"mtime":1621081968000,"results":"51","hashOfConfig":"34"},{"size":2725,"mtime":1609476354000,"results":"52","hashOfConfig":"34"},{"size":3815,"mtime":1620992704000,"results":"53","hashOfConfig":"34"},{"size":3466,"mtime":1619956760000,"results":"54","hashOfConfig":"34"},{"size":1706,"mtime":1620207174000,"results":"55","hashOfConfig":"34"},{"size":91920,"mtime":1610759070000,"results":"56","hashOfConfig":"34"},{"size":362,"mtime":1606467384000,"results":"57","hashOfConfig":"34"},{"size":5280,"mtime":1620835166000,"results":"58","hashOfConfig":"34"},{"size":1530,"mtime":1620822868000,"results":"59","hashOfConfig":"34"},{"size":2000,"mtime":1620897110000,"results":"60","hashOfConfig":"34"},{"size":2174,"mtime":1609462966000,"results":"61","hashOfConfig":"34"},{"size":3049,"mtime":1663750341116,"results":"62","hashOfConfig":"34"},{"size":5974,"mtime":1663750254896,"results":"63","hashOfConfig":"34"},{"size":645,"mtime":1620902302000,"results":"64","hashOfConfig":"34"},{"size":5362,"mtime":1620822868000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"15coys0",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\index.js",[],["139","140"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\eventContext.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\postContext.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profilePage.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\home.jsx",["141"],"import React, { useContext,useState,useEffect } from 'react';\nimport NavBar from './navbar';\nimport NewPost from './newPost';\nimport { ProfileContext } from './profileContext';\nimport \"./basicStyle.css\";\nimport Post from \"./post\";\nimport { PostContext } from './postContext';\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./transition.css\";\n\nconst Home = () => {\n  const { profileImage, firstName, lastName ,fetchProfileData} = useContext(ProfileContext);\n  const [posts, setPosts] = useState([]);\n  const { fetchPosts } = useContext(PostContext);  \n  useEffect(() => {\n    async function initialize() {\n      const posts = await fetchPosts();\n      setPosts(posts);\n      const userId = sessionStorage.getItem(\"userId\");\n      await fetchProfileData(userId);\n    }\n    initialize();\n  }, []);\n  const displayPosts = () => {\n    return posts.map((post) => {\n      return (\n        <Post\n          key={post.id}\n          postId={post.id}\n          postImage={post.imageSource}\n          username={`${post.User.firstName} ${post.User.lastName}`}\n          profileImage={post.User.profile.profileImage}\n          postDescription={post.description}\n          techUsed={post.mainTechUsed}\n          likes={post.likedBy}\n          allComments={post.commentBy}\n          postedBy={post.userId}\n        />\n      );\n    });\n  }\n  return (\n    <React.Fragment>\n      <NavBar />\n      <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={1000}>\n        <div className=\"container\">\n          <NewPost\n            username={`${firstName} ${lastName}`}\n            profileImage={profileImage}\n          />\n          {displayPosts()}\n        </div>\n      </CSSTransition>\n    </React.Fragment>\n  );\n}\n \nexport default Home;","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\fullPost.jsx",["142"],"import React, { useState } from 'react';\nimport postStyle from \"./fullPost.module.css\";\nimport Comment from \"./postComment\";\nimport Modal from \"react-modal\";\n\nconst FullPost = (props) => {\n  const {\n    profileImage,\n    username,\n    postImage,\n    // selfLike,\n    likes,\n    comments,\n    // likePost,\n    isFullPostOpen,\n    setIsFullPostOpen,\n    displayImage,\n    displayDescription,\n    showDropdown,\n    displayLikeBtn,\n    displayTechUsed,\n    displayNewCommentForm,\n    removeCommentFromList,\n    displayCommentBtn\n  } = props;\n  \n\n  const postWidth = () => {\n    // const imageSource = postImage;\n    if (postImage !== null) {\n      return 1200;\n    } else {\n      return 600;\n    }\n  };\n  \n  const displayComments = () => {\n    if (comments.length !== 0) {\n      return comments.map((comment) => {\n        return (\n          <Comment\n            key={comment.id}\n            commentId={comment.id}\n            profileImage={comment.User.profile.profileImage}\n            commentText={comment.text}\n            username={`${comment.User.firstName} ${comment.User.lastName}`}\n            commentedBy={comment.userId}\n            removeCommentFromList={removeCommentFromList}\n          />\n        );\n      });\n    } else {\n      return <span className={postStyle.noComments}>No Comments Posted Yet!</span>\n    }\n  };\n  \n  const modalStyles = {\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: \"rgba(47, 47, 47, 0.685)\",\n    },\n    content: {\n      position: \"absolute\",\n      border: \"1px solid #ccc\",\n      // top: \"20vh\",\n      margin: \"auto\",\n      padding: \"0\",\n      background: \"#fff\",\n      overflow: \"none\",\n      height: \"fit-content\",\n      width: \"fit-content\",\n      WebkitOverflowScrolling: \"touch\",\n      borderRadius: \"4px\",\n      outline: \"none\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      borderTopLeftRadius: \"40px\"\n\n    },\n  };\n  Modal.setAppElement(\"#root\");\n  return (\n    <Modal\n      isOpen={isFullPostOpen}\n      style={modalStyles}\n      onRequestClose={() => setIsFullPostOpen(false)}\n    >\n      <div style={{ width: postWidth }} className={postStyle.post}>\n        {displayImage()}\n        <div className={postStyle.details}>\n          <div className={postStyle.header}>\n            <img id={postStyle.profilePic} src={profileImage} alt=\"\" />\n            <span className={postStyle.username}>{username}</span>\n            <span className={postStyle.menu}>{showDropdown()}</span>\n          </div>\n          {displayDescription()}\n          <div className={postStyle.techs}>{displayTechUsed()}</div>\n          <div className={postStyle.options}>\n            <div className={postStyle.btns}>\n              {displayLikeBtn()}\n              {displayCommentBtn()}\n            </div>\n            <div className={postStyle.totalLikes}>{likes.length} Likes</div>\n          </div>\n          <div className={postStyle.viewComments}>{displayComments()}</div>\n          {displayNewCommentForm()}\n        </div>\n      </div>\n    </Modal>\n  );\n}\n \nexport default FullPost;\n\n","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\eventPage.jsx",["143"],"import React, { useContext, useEffect, useState } from \"react\";\nimport CreateNewEvent from \"./createNewEvent\";\nimport NavBar from \"./navbar\";\nimport \"./basicStyle.css\";\nimport { ProfileContext } from \"./profileContext\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./transition.css\";\nimport { EventContext } from \"./eventContext\";\nimport Event from \"./event\";\nconst EventPage = () => {\n  const { profileImage, firstName, lastName, fetchProfileData } = useContext(\n    ProfileContext\n  );\n  const { getEvents } = useContext(EventContext);\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    async function initialize() {\n      const userId = sessionStorage.getItem(\"userId\");\n      await fetchProfileData(userId);\n      const events = await getEvents();\n      setEvents(events);\n    }\n    initialize();\n  }, []);\n  const displayEvents = () => {\n    return events.map((event) => {\n      console.log(event);\n      return <Event key={event.id} username={event.User.firstName +\" \"+event.User.lastName} profileImage={event.User.profile.profileImage} thumbnail={event.thumbnailSource} aboutEvent={event.aboutEvent} topic={event.topic} title={event.title} city={event.city} state={event.state} address={event.address} eventStartDate={event.EventStartDate} eventEndDate={event.EventEndDate} registrationStartDate={event.RegistrationStartDate} registrationEndDate={event.RegistrationEndDate} startTime={event.startTime} endTime={event.endTime} />\n    })\n  }\n  return (\n    <>\n      <NavBar />\n      <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={1000}>\n        <div className=\"container\">\n          <CreateNewEvent\n            username={`${firstName} ${lastName}`}\n            profileImage={profileImage}\n          />\n          {displayEvents()}\n        </div>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default EventPage;\n",["144","145"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\LoginForm.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\post.jsx",["146"],"import React, { useState, useContext } from \"react\";\nimport postStyle from \"./post.module.css\";\nimport DropDown from \"./dropdown\";\nimport { PostContext } from \"./postContext\";\nimport FullPost from \"./fullPost\";\nimport { Panel,Whisper,Popover,Dropdown } from \"rsuite\";\n\nconst Post = (props) => {\n  const {\n    postId,\n    profileImage,\n    username,\n    postImage,\n    postDescription,\n    techUsed,\n    likes,\n    allComments,\n    postedBy,\n  } = props;\n  const { deletePost, likePost, unlikePost, addNewPostComment } = useContext(\n    PostContext\n  );\n  const userId = sessionStorage.getItem(\"userId\");\n  const [isFullPostOpen, setIsFullPostOpen] = useState(false);\n  const triggerRef = React.createRef();\n  const [selfLike, setSelfLike] = useState(() => {\n    let isLiked = false;\n    for (const index in likes) {\n      if (likes[index].userId === userId) {\n        isLiked = true;\n        break;\n      }\n    }\n    return isLiked;\n  });\n  const [totalLikes, setTotalLikes] = useState(likes.length);\n  const [newComment, setNewComment] = useState(\"\");\n  const [isImageContain, setIsImageContain] = useState(false);\n  const [comments, setComments] = useState(allComments);\n  const toggleLike = () => {\n    setSelfLike(!selfLike);\n  };\n  const handleToggle = () => {\n    setIsImageContain(!isImageContain);\n  };\n  const imageFit = (imageSource) => {\n    if (isImageContain === true) {\n      return (\n        <img\n          onClick={handleToggle}\n          className={`${postStyle.image} ${postStyle.contain}`}\n          src={imageSource}\n          alt=\"\"\n        />\n      );\n    } else {\n      return (\n        <img\n          onClick={handleToggle}\n          className={`${postStyle.image} ${postStyle.cover}`}\n          src={imageSource}\n          alt=\"\"\n        />\n      );\n    }\n  };\n  const displayImage = () => {\n    const imageSource = postImage;\n    if (imageSource !== \"\") {\n      return (\n        <div className={postStyle.imageContainer}>\n          <div className={postStyle.imageContainer}>\n            {imageFit(imageSource)}\n          </div>\n        </div>\n      );\n    }\n  };\n  const displayTechUsed = () => {\n    if (techUsed !== \"\" && techUsed !== null) {\n      const techs = techUsed.split(\",\");\n      return techs.map((tech) => {\n        return (\n          <div key={tech} className={postStyle.tech}>\n            {tech}\n          </div>\n        );\n      });\n    }\n  };\n  const displayDescription = () => {\n    if (postDescription !== \"\" && postDescription !== null) {\n      return <p className={postStyle.description}>{postDescription}</p>;\n    }\n  };\n  const displayLikeBtn = () => {\n    if (selfLike === true) {\n      return (\n        <span\n          className={`${postStyle.upVoteButton} ${postStyle.like}`}\n          onClick={() => {\n            toggleLike();\n            setTotalLikes(totalLikes - 1);\n            unlikePost(postId);\n          }}\n        >\n          <i className=\"fas fa-heart\"></i>\n        </span>\n      );\n    } else {\n      return (\n        <span\n          className={postStyle.upVoteButton}\n          onClick={() => {\n            toggleLike();\n            setTotalLikes(totalLikes + 1);\n            likePost(postId);\n          }}\n        >\n          <i className=\"far fa-heart\"></i>\n        </span>\n      );\n    }\n  };\n  const handleSelectedOption = async (action) => {\n    switch (action) {\n      case \"deletePost\":\n        const post = await deletePost(postId);\n        if (post === \"deleted\") {\n          alert(\"Post Has Been Deleted\");\n          window.location.reload();\n        }\n        break;\n      default:\n        console.log(\"Some thing out of the Box Happened\");\n        break;\n    }\n  };\n  const showOptions = (options) => {\n    return options.map(element => {\n      return <Dropdown.Item eventKey={element.value}>{element.label}</Dropdown.Item>\n    });\n  }\n  const MenuPopover = ({ onSelect,options, ...rest }) => (\n    <Popover {...rest} full>\n      <Dropdown.Menu onSelect={onSelect}>\n        {showOptions(options)}\n      </Dropdown.Menu>\n    </Popover>\n  );\n  const handleSelectMenu = (eventKey, event) => {\n    if (eventKey === 1) {\n      handleSelectedOption(\"deletePost\");\n    }\n    triggerRef.current.hide();\n  };\n  const showDropdown = () => {\n    const options = [];\n    if (postedBy === userId) {\n      options.push({ value: 1, label: \"Delete Post\" });\n    }\n    return (\n      <Whisper\n        placement=\"rightStart\"\n        trigger=\"click\"\n        triggerRef={triggerRef}\n        style={{ alignItems: \"center\" }}\n        speaker={<MenuPopover options={options} onSelect={handleSelectMenu} />}\n      >\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </Whisper>\n    );\n  };\n  const handleNewComment = async () => {\n    const comment = await addNewPostComment(postId, newComment);\n    const commentsArray = comments;\n    commentsArray.push(comment);\n    setComments(commentsArray);\n    // console.log(comments);\n    setNewComment(\"\");\n  };\n  const removeCommentFromList = (commentId) => {\n    const filteredComments = comments.filter((comment) => {\n      return comment.id !== commentId;\n    });\n    setComments(filteredComments);\n  };\n  const showNewCommentBtn = () => {\n    if (newComment !== \"\") {\n      return (\n        <div onClick={handleNewComment} className={postStyle.postComment}>\n          <span\n            className={`${postStyle.postCommentBtn} ${postStyle.enableComment}`}\n          >\n            Post\n          </span>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{ cursor: \"not-allowed\" }}\n          className={postStyle.postComment}\n        >\n          <span className={postStyle.postCommentBtn}>Post</span>\n        </div>\n      );\n    }\n  };\n  const displayNewCommentForm = () => {\n    return (\n      <div className={postStyle.addComment}>\n        <input\n          className={postStyle.newComment}\n          type=\"text\"\n          placeholder=\"Add Comment\"\n          value={newComment}\n          onChange={(e) => {\n            setNewComment(e.target.value);\n          }}\n        />\n\n        {showNewCommentBtn()}\n      </div>\n    );\n  };\n  const displayCommentBtn = () => {\n    return <span\n                style = {{cursor:\"pointer\"}}\n                onClick={() => {\n                  setIsFullPostOpen(!isFullPostOpen);\n                }}\n              >\n                <i className=\"far fa-comment\"></i>\n              </span>\n  }\n  const showFullPost = () => {\n    // console.log(\"Full Post Opened\")\n    if (isFullPostOpen === true) {\n      return (\n        <FullPost\n          profileImage={profileImage}\n          username={username}\n          postImage={postImage}\n          description={postDescription}\n          selfLike={selfLike}\n          likePost={toggleLike}\n          likes={likes}\n          comments={comments}\n          isFullPostOpen={isFullPostOpen}\n          setIsFullPostOpen={setIsFullPostOpen}\n          displayImage={displayImage}\n          displayDescription={displayDescription}\n          showDropdown={showDropdown}\n          displayLikeBtn={displayLikeBtn}\n          displayTechUsed={displayTechUsed}\n          displayNewCommentForm={displayNewCommentForm}\n          removeCommentFromList={removeCommentFromList}\n          displayCommentBtn={displayCommentBtn}\n        />\n      );\n    }\n  };\n  return (\n    <Panel\n      shaded\n      bodyFill\n      style={{ backgroundColor: \"white\", margin: \"15px 0\", width: 600 }}\n      header={\n        <div className={postStyle.header}>\n          <img id={postStyle.profilePic} src={profileImage} alt=\"\" />\n          <div className={postStyle.username}>{username}</div>\n          <span className={postStyle.menu}>{showDropdown()}</span>\n        </div>\n      }\n    >\n      {displayImage()}\n      <div className={postStyle.panelBody}>\n        <div className={postStyle.techs}>{displayTechUsed()}</div>\n        {displayDescription()}\n        <div className={postStyle.options}>\n          {displayLikeBtn()}\n          {displayCommentBtn()}\n          {showFullPost()}\n        </div>\n        <div className={postStyle.totalLikes}>{totalLikes} Likes</div>\n      </div>\n      {displayNewCommentForm()}\n    </Panel>\n  );\n};\n\nexport default Post;","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\createNewEvent.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\editProfile.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\technologies.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userExpertise.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\aboutUser.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userFieldOfInterest.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\message.jsx",["147"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\chat.jsx",["148"],"import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Container,\n  Sidebar,\n  Sidenav,\n  Nav,\n  Icon,\n  Input,\n  InputGroup,\n} from \"rsuite\";\nimport NavBar from \"./navbar\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./transition.css\";\nimport styles from \"./chat.module.css\";\nimport ChatArea from \"./chatArea\";\n// import Search from \"./search\";\nconst Chat = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const currentUser = window.sessionStorage.getItem(\"userId\");\n\n  const [items, setItems] = useState([]);\n  const [active, setActive] = useState(\"\");\n\n  const [selectedItem, setSelectedItem] = useState({});\n  const searchItem = (id) => {\n    for (const item of items) {\n      if (item.id === id) {\n        // console.log(item);\n        return item;\n      }\n    }\n  };\n\n  const handleSelect = (activeKey) => {\n    // console.log(activeKey);\n    setActive(activeKey);\n    const item = searchItem(activeKey);\n    // console.log(item);\n    setSelectedItem(item);\n    // console.log(\"function called\");\n  };\n  const showItems = () => {\n    return items.map((item) => {\n      if (item.id !== currentUser) {\n        return (\n          <Nav.Item\n            key={item.id}\n            // style={{ backgroundColor: \"yellowgreen\"}}\n\n            className={styles.item}\n            eventKey={item.id}\n            icon={\n              <img\n                style={{\n                  height: 30,\n                  width: 30,\n                  objectFit: \"cover\",\n                  objectPosition: \"0 0\",\n                  borderRadius: \"50%\",\n                }}\n                src={item.profileImage}\n                alt=\"\"\n              />\n            }\n          >\n            {` ${item.fullName}`}\n          </Nav.Item>\n      \n        )\n      };\n    });\n  };\n  const getItems = () => {\n    // console.log(searchInput)\n    const body = {\n      searchInput: searchInput,\n    };\n    fetch(\"http://localhost:3000/api/user/search\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(data);\n        // setLoading(false);\n        setItems(data);\n      })\n      .catch((e) => console.log(\"Oops, error\", e));\n  };\n  return (\n    <>\n      <NavBar />\n      <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={1000}>\n        <Container style={{ paddingTop: 60, height: \"100%\" }}>\n          <Sidebar\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              // height: \"100%\",\n              zIndex: 1,\n              boxShadow: \"0px 0px 1px 0px\",\n            }}\n            width={260}\n          >\n            <Sidenav\n              // appearance=\"inverse\"\n              style={{\n                height: \"100%\",\n              }}\n              activeKey={active}\n              onSelect={handleSelect}\n            >\n              <Sidenav.Header\n                style={{\n                  backgroundColor: \"#dbdbdb\",\n                  height: \"8%\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <div>\n                  <InputGroup>\n                    <Input\n                      onChange={(value) => {\n                        setSearchInput(value);\n                      }}\n                      onPressEnter={getItems}\n                      placeholder=\"Search...\"\n                    />\n                    <InputGroup.Button onClick={getItems}>\n                      <Icon icon=\"search\" />\n                    </InputGroup.Button>\n                  </InputGroup>\n                </div>\n              </Sidenav.Header>\n              <Sidenav.Body\n                style={{\n                  height: \"92%\",\n                  // backgroundColor: \"red\",\n                }}\n              >\n                <Nav>\n                  {showItems()}\n                  {/* {items.map((item) => {\n                    return (\n                      <Nav.Item key={item.id} eventKey={item.id}>\n                        {item.name}\n                      </Nav.Item>\n                    );\n                  })} */}\n                </Nav>\n              </Sidenav.Body>\n            </Sidenav>\n          </Sidebar>\n          {/* {handleSelect(\"3\")} */}\n\n          {active !== \"\" ? <ChatArea selectedItem={selectedItem} currentUser={currentUser} /> : null}\n        </Container>\n      </CSSTransition>\n    </>\n  );\n};\n\nexport default Chat;\n","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profileContext.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\SignUpForm.js",[],["149","150"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\navbar.jsx",["151","152"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link} from \"react-router-dom\";\nimport navStyle from \"./nav.module.css\";\nimport { ProfileContext } from \"./profileContext\";\nimport { Nav, Navbar, Icon, Popover, Dropdown, Whisper } from \"rsuite\";\nimport Search from \"./search\";\n\nconst NavBar = () => {\n  const userId = sessionStorage.getItem(\"userId\");\n  const triggerRef = React.createRef();\n\n  const { getProfileImage } = useContext(ProfileContext);\n\n  const [profileImage, setProfileImage] = useState(\"\");\n\n  useEffect(() => {\n    async function initialize() {\n      const image = await getProfileImage(userId);\n      setProfileImage(image);\n    }\n    initialize();\n  }, []);\n  \n  const MenuPopover = ({ onSelect, ...rest }) => (\n    <Popover {...rest} full>\n      <Dropdown.Menu onSelect={onSelect}>\n        <Dropdown.Item eventKey={1}>My Profile</Dropdown.Item>\n\n        <Dropdown.Item eventKey={2}>Log Out</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n  );\n  const handleSelectMenu = (eventKey, event) => {\n    // console.log(eventKey);\n    if (eventKey === 1) {\n      handleSelectedOption(\"openProfile\");\n    } else {\n      if (eventKey === 2) {\n        handleSelectedOption(\"logOut\");\n      }\n    }\n    triggerRef.current.hide();\n  };\n  const handleSelectedOption = (action) => {\n    switch (action) {\n      case \"openProfile\":\n        window.open(`/profile/${userId}`, \"_top\");\n        break;\n      case \"logOut\":\n        window.sessionStorage.setItem(\"userId\", \"\");\n        window.open(\"/\", \"_top\");\n        break;\n      default:\n        console.log(\"Some thing out of the Box Happened\");\n        break;\n    }\n  };\n  return (\n    <Navbar\n      appearance=\"default\"\n      style={{\n        display: \"flex\",\n        height: 60,\n        width: \"100%\",\n        zIndex:2,\n        boxShadow: \"0px 1px 4px 0px\",\n        position: \"fixed\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Navbar.Header>\n        <Link\n          style={{ textDecoration: \"none\" }}\n          className={navStyle.link}\n          to=\"/home\"\n        >\n          <h4 className={navStyle.logo}>IdeaMonger</h4>\n        </Link>\n      </Navbar.Header>\n      <Navbar.Body style={{ paddingLeft: 50}}>\n        <Search apiUrl=\"http://localhost:3000/api/user/search\" style={{ margin: \"10px 30px\" }} />\n        <Nav justified style={{margin:\"3px 0\"}} pullRight appearance=\"subtle\">\n          <Link to=\"/home\">\n            <Nav.Item icon={<Icon icon=\"home\" />}>Home</Nav.Item>\n          </Link>\n          <Link to=\"/events\">\n            <Nav.Item icon={<Icon icon=\"calendar\" />}>Events</Nav.Item>\n          </Link>\n          <Link to=\"/chat\">\n            <Nav.Item icon={<Icon icon=\"comment-o\" />}>Chat</Nav.Item>\n          </Link>\n          <Whisper\n            placement=\"bottomEnd\"\n            trigger=\"click\"\n            triggerRef={triggerRef}\n            style={{alignItems:\"center\"}}\n            speaker={<MenuPopover onSelect={handleSelectMenu} />}\n          >\n            <div className={navStyle.profileImageContainer}>\n              <img\n                className={navStyle.profileImage}\n                src={profileImage}\n                alt=\"\"\n              />\n            </div>\n          </Whisper>\n        </Nav>\n      </Navbar.Body>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n\n{\n  /* <Dropdown\n  toggleClassName={navStyle.toggleDropdown}\n  noCaret\n  placement=\"bottomStart\"\n  title={\n    <div className={navStyle.profileImageContainer}>\n      <img className={navStyle.profileImage} src={profileImage} alt=\"\" />\n    </div>\n  }\n>\n  <Dropdown.Item\n    onSelect={() => {\n      handleSelectedOption(\"openProfile\");\n    }}\n  >\n    My Profile\n  </Dropdown.Item>\n  <Dropdown.Item\n    onSelect={() => {\n      handleSelectedOption(\"logOut\");\n    }}\n  >\n    Log Out\n  </Dropdown.Item>\n</Dropdown>; */\n}\n","C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\event.jsx",["153"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\programmingLanguages.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\informationComponents\\locationData.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\reportWebVitals.js",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\chatArea.jsx",["154","155"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\postComment.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\search.jsx",["156"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\loginPage.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userContext.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\profile.jsx",["157","158","159"],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\userExperience.jsx",[],"C:\\Users\\harsh\\Desktop\\Envy Desktop Data\\idea-monger\\src\\components\\newPost.jsx",["160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":23,"column":6,"nodeType":"167","endLine":23,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"173","line":24,"column":6,"nodeType":"167","endLine":24,"endColumn":8,"suggestions":"174"},{"ruleId":"161","replacedBy":"175"},{"ruleId":"163","replacedBy":"176"},{"ruleId":"169","severity":1,"message":"177","line":3,"column":8,"nodeType":"171","messageId":"172","endLine":3,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":1,"column":10,"nodeType":"171","messageId":"172","endLine":1,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":44,"column":29,"nodeType":"180","messageId":"181","endLine":44,"endColumn":31},{"ruleId":"161","replacedBy":"182"},{"ruleId":"163","replacedBy":"183"},{"ruleId":"165","severity":1,"message":"184","line":22,"column":6,"nodeType":"167","endLine":22,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":115,"column":1,"nodeType":"188","messageId":"189","endLine":141,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":97,"column":1,"nodeType":"188","messageId":"189","endLine":114,"endColumn":2},{"ruleId":"169","severity":1,"message":"190","line":9,"column":3,"nodeType":"171","messageId":"172","endLine":9,"endColumn":10},{"ruleId":"165","severity":1,"message":"191","line":94,"column":6,"nodeType":"167","endLine":94,"endColumn":20,"suggestions":"192"},{"ruleId":"169","severity":1,"message":"193","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":14},{"ruleId":"186","severity":1,"message":"194","line":79,"column":7,"nodeType":"188","messageId":"195","endLine":79,"endColumn":50},{"ruleId":"186","severity":1,"message":"194","line":80,"column":7,"nodeType":"188","messageId":"195","endLine":80,"endColumn":52},{"ruleId":"165","severity":1,"message":"196","line":103,"column":6,"nodeType":"167","endLine":103,"endColumn":8,"suggestions":"197"},{"ruleId":"186","severity":1,"message":"187","line":138,"column":1,"nodeType":"188","messageId":"189","endLine":189,"endColumn":2},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPosts' and 'fetchProfileData'. Either include them or remove the dependency array.","ArrayExpression",["200"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchProfileData' and 'getEvents'. Either include them or remove the dependency array.",["201"],["198"],["199"],"'DropDown' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["198"],["199"],"React Hook useEffect has missing dependencies: 'getProfileImage' and 'userId'. Either include them or remove the dependency array.",["202"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Content' is defined but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["203"],"'Link' is defined but never used.","Nested block is redundant.","redundantNestedBlock","React Hook useEffect has missing dependencies: 'currentUser', 'fetchProfileData', 'followers', 'followings', 'getFollowersFollowings', and 'userId'. Either include them or remove the dependency array.",["204"],"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [fetchPosts, fetchProfileData]",{"range":"215","text":"216"},"Update the dependencies array to be: [fetchProfileData, getEvents]",{"range":"217","text":"218"},"Update the dependencies array to be: [getProfileImage, userId]",{"range":"219","text":"220"},"Update the dependencies array to be: [selectedItem, users]",{"range":"221","text":"222"},"Update the dependencies array to be: [currentUser, fetchProfileData, followers, followings, getFollowersFollowings, userId]",{"range":"223","text":"224"},[807,809],"[fetchPosts, fetchProfileData]",[842,844],"[fetchProfileData, getEvents]",[695,697],"[getProfileImage, userId]",[2606,2620],"[selectedItem, users]",[2950,2952],"[currentUser, fetchProfileData, followers, followings, getFollowersFollowings, userId]"]